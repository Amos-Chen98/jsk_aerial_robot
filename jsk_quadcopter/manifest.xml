<package>
  <description brief="jsk_quadcopter">

     jsk_quadcopter.
     position control for all quadcopters developed in JSK environment.

     depend: 
     roscpp/rospy : all of the codes are inplemented in C++/ pyhton
     nav_msgs : used by receiving the estimated value of poistion (x,y,z) and velocity (vx, vy, vz), and theta
     laser_geometry : received the scan data from hokuyo
     sensor_msgs : maybe useful, so far unknown
     visualization_msgs : for rviz marker
     geometry_msgs : for rviz points

     codes relationship:
     1. basic_controller_superior_controller_interface.h/cpp 
     ---> serial communication between basic controller on the quadcopter for attitude control and superior controller on the CPU (cf. nuc) for position control
     2. postion_controller.h/cpp
     ---> description of position controller (cf. pid controller)
     3. flight_navigation.h/cpp
     ---> description of position navigation (cf. keyboard / hough transform)
     4. state_estimation.h/cpp
     ---> description of position estimation (cf. slam / odometry)
     5. quadcopter.h/cpp
     ---> ros param and spin function to combine all of the above codes.
     6. quadcopter_node.h/cpp
     ---> the comprehensive node to run on ros syste.

     issue:

     1. Mutex problem (40hz)

     2. ROS publish / subscribe 
     ---> rostopic process between jsk_quadcopter and other nodes using "decentralization" rules with the same root node handle but different namespace.

     3. about depend:
     So far, the "tf" package is not written here, but works, partially because other package like "laser geometry" include tf. Howeverm this does not work with groovy system. 
     4. about laser geometry, which modefied in CMakeList.txt file 

  </description>
  <author>bakui</author>
  <license>BSD</license>
  <review status="unreviewed" notes=""/>
  <url>http://ros.org/wiki/jsk_quadcopter</url>
  <depend package="roscpp"/>
  <depend package="rospy"/>
  <depend package="tf"/>
  <depend package="jsk_quadcopter_common"/>
  <depend package="std_msgs"/>
  <depend package="sensor_msgs"/>
  <depend package="nav_msgs"/>
  <depend package="laser_geometry"/>
  <depend package="visualization_msgs"/>
  <depend package="geometry_msgs"/>
  <depend package="px_comm" />
  <depend package="dynamic_reconfigure" />
  <!--<depend package="ar_pose"/> -->
  <depend package="posedetection_msgs"/>
  <depend package="dynamic_tf_publisher" />
  <depend package="image_processing" />
  <rosdep name="eigen" />

  <export>
    <cpp cflags="-I${prefix}/include -I${prefix}/cfg/cpp" lflags="-Wl,-rpath,${prefix}/lib -L${prefix}/lib -ljsk_quadcopter -ltracking"/>
  </export>



</package>


