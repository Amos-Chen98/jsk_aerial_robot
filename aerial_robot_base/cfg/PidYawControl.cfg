#!/usr/bin/env python
PACKAGE = "jsk_quadcopter"

import roslib;roslib.load_manifest(PACKAGE)
from math import pi

from dynamic_reconfigure.parameter_generator import *
from jsk_quadcopter_common.msg import DynamicReconfigureLevels

gen = ParameterGenerator()

gen.add("pidControlFlag", bool_t, DynamicReconfigureLevels.RECONFIGURE_CONTROL_FLAG, "PID Control Flag", False)
gen.add("ctrlLoopRate", double_t, DynamicReconfigureLevels.RECONFIGURE_CONTROL_LOOP_RATE, "CtrlLoopTate", 0, 0, 10)

gen.add("posPGain", double_t, DynamicReconfigureLevels.RECONFIGURE_POS_P_GAIN, "PosPGain", 0, 0, 10)
gen.add("posIGain", double_t, DynamicReconfigureLevels.RECONFIGURE_POS_I_GAIN, "PosIGain", 0, 0, 10)
gen.add("posDGain", double_t, DynamicReconfigureLevels.RECONFIGURE_POS_D_GAIN, "PosDGain", 0, 0, 10)
gen.add("offset", int_t, DynamicReconfigureLevels.RECONFIGURE_OFFSET, "Offset", 0, 0, 10)
gen.add("posLimit", int_t, DynamicReconfigureLevels.RECONFIGURE_POS_LIMIT, "PosLmit", 0, 0, 10)
gen.add("posPLimit", int_t, DynamicReconfigureLevels.RECONFIGURE_POS_P_LIMIT, "PosPLmit", 0, 0, 10)
gen.add("posILimit", int_t, DynamicReconfigureLevels.RECONFIGURE_POS_I_LIMIT, "PosILmit", 0, 0, 10)
gen.add("posDLimit", int_t, DynamicReconfigureLevels.RECONFIGURE_POS_D_LIMIT, "PosDLmit", 0, 0, 10)

exit(gen.generate(PACKAGE, "jsk_quadcopter", "PidYawControl"))


