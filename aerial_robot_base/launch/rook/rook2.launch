<?xml version="1.0"?>
<launch>

  ############################# Global Param ###################################

  <!--   flight_mode
      *pos mode: pos control with hokuyo + keyboard,
      *vel mode: vel control with px4 + joystick
      -other mode: pos/vel control with hokuyo + px4 + joystick + keyboard: need process interior switch function
      the most important param
      controlMode: switch betwen vel and pos
      altitudeControlMode: switch between laser and sonoar
      usefreefall: necessary for snoar mode
      useouteryawest: necessary for lasersalm + pos
  -->

  <!-- board mode
       kduino board
       asctec board
  -->

  <!-- additional mode
       rocket star : mainly coded in quadcopter_state_estimation.cpp (no good?)
       free fall  : mainly coded in flight_navigation.cpp (no good?)
       throwing mode : mainly coded in flight_navigation.cpp (no good?)
  -->

  <arg name="flight_pos_mode" value="true" /> <!-- pos mode -->
  <arg name="flight_vel_mode" value="false" />  <!-- vel mode -->

  ############################# JSK Quadcopter ###################################

  <node pkg="aerial_robot_base" type="aerial_robot_base_node" name="aerial_robot_base_node"  output="screen" > 

    ############### Basic Param  #####################
    <param name="rx_loop_rate" type="double" value="110"/>
    <param name="tx_loop_rate" type="double" value="40"/>
    <param name="tf_pub_loop_rate" type="double" value="120"/>

    <!-- z axis   -> 0: laser, 1:sonar -->
    <param if="$(arg flight_pos_mode)" name="estimator/altitude_control_mode" type="int" value="0"/>
    <!-- yaw axis -> true for slam; false for kduino -->
    <param if="$(arg flight_pos_mode)" name="estimator/use_outer_yaw_est" type="bool" value="true"/>
    <!-- x/y axis -> pos control: 0, vel control: 1 -->
    <param if="$(arg flight_pos_mode)" name="navigator/xy_control_mode" type="int" value="0"/>
    <param if="$(arg flight_vel_mode)" name="estimator/altitude_control_mode" type="int" value="1"/>
    <param if="$(arg flight_vel_mode)" name="estimator/use_outer_yaw_est" type="bool" value="false"/>
    <param if="$(arg flight_vel_mode)" name="navigator/xy_control_mode" type="int" value="1"/>

    ############### Quadctoper Basic State ######################
    <rosparam file="$(find aerial_robot_base)/config/rook2/EstimatorConfig.yaml" command="load" />

    ############### PID Control ######################
    <rosparam file="$(find aerial_robot_base)/config/rook2/PidControlConfig.yaml" command="load" />

    ############### _motion Capture####################
    <param name="estimator/mocap_flag" type="bool" value="true"/>

    ############### Kalman Filter ####################
    <param name="estimator/kalman_filter_flag" type="bool" value="true"/>
    <param name="kalman_filter/imu_hz" type="double" value="105"/>
    <rosparam file="$(find aerial_robot_base)/config/rook2/KduinoKalmanFilterConfig.yaml" command="load" />
    <rosparam file="$(find aerial_robot_base)/config/rook2/OpticalFlowKalmanFilterConfig.yaml" command="load" />

    ############### Kalman Filter Debug/Simulation ###
    <param name="estimator/kalman_filter_debug" type="bool" value="true"/>
    <param name="estimator/kalman_filter_axis" type="int" value="1"/>
    <rosparam file="$(find aerial_robot_base)/config/rook2/SimulationKalmanFilterConfig.yaml" command="load" />


    ############### II_r Filter #######################
    <rosparam file="$(find aerial_robot_base)/config/rook2/IirFilterConfig.yaml" command="load" />

    ############### Hokuyo and _mirror _module _param ###
    <rosparam file="$(find aerial_robot_base)/config/rook2/MirrorLaserModuleConfig.yaml" command="load" />

    ############### _rocekt Start and Free Fall #######
    <param if="$(arg flight_pos_mode)" name="navigator/use_rocket_start" type="bool" value="false"/>
    <param if="$(arg flight_pos_mode)" name="navigator/use_free_fall" type="bool" value="false"/>
    <param if="$(arg flight_vel_mode)" name="navigator/use_rocket_start" type="bool" value="true"/>
    <param if="$(arg flight_vel_mode)" name="navigator/use_free_fall" type="bool" value="true"/>
    <rosparam file="$(find aerial_robot_base)/config/rook2/RocketStartFreeFallConfig.yaml" command="load" />

    ############### Throwing Mode ####################
    <param if="$(arg flight_vel_mode)" name="navigator/use_throwing_mode" type="bool" value="true"/>
    <rosparam file="$(find aerial_robot_base)/config/rook2/ThrowingModeConfig.yaml" command="load"/>

    ############### Keyboard Navigation ##############
    <rosparam file="$(find aerial_robot_base)/config/rook2/TeleopNavigationConfig.yaml" command="load" />

    ############### remap topic ######################
    ### Kduino IMU ################
    <remap from="/imu/kduino/imu" to="/kduino/imu" />
    <remap from="/navigator/kduino/rc_cmd" to="/kduino/rc_cmd" />
    <remap from="/navigator/kduino/msp_cmd" to="/kduino/msp_cmd" />
    <remap from="/navigator/kduino/arming_ack" to="/kduino/arming_ack" />
    ### Hokuyo and Mirror Laser ###
    <remap from="mirror/scan" to="scan" />
    <remap from="mirror/laser_boundary_offset" to="laser_boundary_offset" />
    ### Optical Flow ##############
    <remap from="optical_flow/opt_flow" to="px4flow/opt_flow" />
    ### Joy Stick #################
    <remap from="/navigator/joy_stick_command" to="/joy" />
    ### Teleop Navigator ##########
    <remap from="/navigator/teleop_command/land" to="/teleop_command/land" />
    <remap from="/navigator/teleop_command/start" to="/teleop_command/start" />
    <remap from="/navigator/teleop_command/halt" to="/teleop_command/halt" />
    <remap from="/navigator/teleop_command/takeoff" to="/teleop_command/takeoff" />
    <remap from="/navigator/teleop_command/roll" to="/teleop_command/roll" />
    <remap from="/navigator/teleop_command/pitch" to="/teleop_command/pitch" />
    <remap from="/navigator/teleop_command/yaw" to="/teleop_command/yaw" />
    <remap from="/navigator/teleop_command/throttle" to="/teleop_command/throttle" />
    <remap from="/navigator/teleop_command/ctrl_mode" to="/teleop_command/ctrl_mode" />

  </node>

  ################################# Kduino #########################################

  <node pkg="rosserial_python" type="serial_node.py" name="serial_node" output="screen">
    <param name="baud" value="115200" />
    <param name="port" value="/dev/kawasaki_imu_board" />
  </node>

  ################################# Hector Mapping  ################################

  <group if="$(arg flight_pos_mode)">
    <include file="$(find aerial_robot_base)/launch/hector_mapping.launch" />
  </group>

  ################################# Hokuyo  ########################################
  <group if="$(arg flight_pos_mode)">
    <include file="$(find aerial_robot_base)/launch/hokuyo.launch" />
  </group>

  ################################# Optical PX4Flow ################################
  <group if="$(arg flight_vel_mode)">
    <include file="$(find aerial_robot_base)/launch/px4flow.launch" />
  </group>

  ################################# Joy Stick ######################################
  <include file="$(find aerial_robot_base)/launch/joy_stick.launch" />

  ################################# Camera ######################################
<!--  <include file="$(find aerial_robot_base)/launch/camera/usb_camera.launch" /> -->

</launch>



